"""
Django settings for gestion_vehicules project.

Generated by 'django-admin startproject' using Django 4.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Nom : test1
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-e$=-1x-y8!d8%ku&kz0uq#ap!_6%r7e!r85p$z+-ujcu0ed$@7')

# SECURITY WARNING: don't run with debug turned on in production!
# Nom : DEBUG
# Valeur : False (pour la production)
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

# Nom : ALLOWED_HOSTS
# Valeur : domaines autorisés
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '*').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Applications personnalisées
    'core',
    'securite',
    'demandeur',
    'dispatch',
    'chauffeur',
    'entretien',
    'ravitaillement',
    'rapport',
    'suivi',
    'notifications',
    'chat',
    
    # Applications tierces
    'django_crontab',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Pour servir les fichiers statiques
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Réactivé pour la sécurité
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestion_vehicules.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestion_vehicules.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Configuration de base de données avec support PostgreSQL pour Render
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', f"sqlite:///{BASE_DIR / 'db.sqlite3'}"),
        conn_max_age=600
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Africa/Lubumbashi'  # Lubumbashi est à UTC+2, 1 heure en avance par rapport à Kinshasa

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Modèle utilisateur personnalisé
AUTH_USER_MODEL = 'core.Utilisateur'

# Configuration des médias
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configuration des fichiers statiques
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Configuration de l'authentification
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Configuration CSRF
CSRF_COOKIE_SECURE = not DEBUG  # True en production avec HTTPS
CSRF_COOKIE_HTTPONLY = not DEBUG  # True en production
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'http://localhost:8000', 'https://asofes.onrender.com']

# Configuration email
# Pour le développement uniquement (les emails sont affichés dans la console)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Configuration email avec Gmail
# Pour utiliser Gmail, suivez ces étapes:
# 1. Activez l'authentification à deux facteurs sur votre compte Google: https://myaccount.google.com/security
# 2. Créez un mot de passe d'application: https://myaccount.google.com/apppasswords
# 3. Utilisez ce mot de passe d'application ci-dessous (pas votre mot de passe Gmail habituel)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'votre_email@gmail.com'  # Remplacez par votre adresse Gmail
EMAIL_HOST_PASSWORD = 'votre_mot_de_passe_app'  # Remplacez par votre mot de passe d'application 
DEFAULT_FROM_EMAIL = 'noreply@asofes.com'

# Autre option: Configuration avec un service SMTP générique (comme SendGrid, Mailgun, etc.)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.votreservice.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'votre_identifiant'
# EMAIL_HOST_PASSWORD = 'votre_mot_de_passe'
# DEFAULT_FROM_EMAIL = 'noreply@asofes.com'

# Configuration Twilio (pour SMS et WhatsApp)
TWILIO_ACCOUNT_SID = os.environ.get('TWILIO_ACCOUNT_SID', 'AC8cfd32a38305b8a2376b7c75680819f6')  # ID correct
TWILIO_AUTH_TOKEN = os.environ.get('TWILIO_AUTH_TOKEN', '78a3b5d2a56a028962a3b6bd8ad1519d')  # Token correct
# Numéro Twilio acheté
TWILIO_PHONE_NUMBER = os.environ.get('TWILIO_PHONE_NUMBER', '+12295159640')  # Votre numéro Twilio
TWILIO_WHATSAPP_NUMBER = os.environ.get('TWILIO_WHATSAPP_NUMBER', '+14155238886')  # Numéro Twilio WhatsApp

# Configuration des tâches cron
CRONJOBS = [
    # Vérifier les expirations de documents tous les jours à 8h00
    ('0 8 * * *', 'notifications.tasks.check_document_expirations'),
]
